height <- 7
}else if(length(match.table.inx) < 18){
height <- 9
}else if(length(match.table.inx) < 24){
height <- 13
}else if(length(match.table.inx) < 32){
height <- 17.5
}else{
height <- height
}
metabolites.table.a <- metabolites.table.a[, c(1, na.omit(match.table.inx))]
metabolites.table.a <- t(metabolites.table.a)
colnames(metabolites.table.a) <- metabolites.table.a[1,]
metabolites.table.a <- metabolites.table.a[-1, ]
metabolites.table.df <- reshape2::melt(metabolites.table.a)
metabolites.table.df <- metabolites.table.df[(metabolites.table.df$value == "1"), ]
group.inx <- match(as.character(metabolites.table.df$Var1), bioactive.metabolites[,1])
metabolites.table.df$group = factor(bioactive.metabolites[group.inx, 2])
metabolites.table.df <- metabolites.table.df[order(metabolites.table.df$group),]
metabolites.table.df$regulated <- match.table.a$regulated[match(as.character(metabolites.table.df$Var2), match.table.a$matches)]
metabolites.table.df <- metabolites.table.df[order(metabolites.table.df$regulated), ]
metabolites.table.df$Var2 <- factor(metabolites.table.df$Var2, levels = unique(as.character(metabolites.table.df$Var2)))
col_regulated <- match.table.a$regulated[match(levels(metabolites.table.df$Var2), match.table.a$matches)]
col_regulated <- ifelse(tolower(col_regulated) == "down", "#000058", "#8b0000")
groups <-  metabolites.table.df[,c(1,4)] %>%
group_by(group) %>%
slice(c(1, n())) %>%
ungroup()
groups_df <- data.frame(xmin = groups$Var1[c(TRUE, FALSE)],
xmax = groups$Var1[c(FALSE, TRUE)],
group = unique(groups$group))
library(ggplot2)
library(ggtext)
library(RColorBrewer)
cols <- c("#003f5c", "#7F3C8D", "#11A579", "#E68310", "#b8b633", "#575c4d")
p <- ggplot(data = metabolites.table.df, mapping = aes(x = Var1, y = Var2,
fill = value, color = group)) +
geom_point(alpha = 0.75, size = bubble_size) +
scale_color_manual(values = cols, name = "Metabolite\nClass") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(axis.text.y = element_markdown(colour = col_regulated)) +
guides(fill = FALSE) +
xlab("Bioactive Metabolite") + ylab("Microbes\n")
p
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "Fatty acid degradation")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "Fatty acid elongation")
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
# # 19 of 44 matches
mbSet<-readMNetTable(mbSet, "~/NetBeansProjects/MicrobiomeNet/MicrobiomeNet/src/main/webapp/resources/data/s0_crc_example.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CRC vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
mbSet$mNet$feat.tbl
m <- qs::qread("gem_matches.qs")
View(m)
mbSet$mNet$feat.tbl$Microbe[mbSet$mNet$feat.tbl$Microbe %in% m$query]
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
gem_otus <- data.table::fread("~/Desktop/MicrobiomeNet/MicrobiomeNet_libs/taxa_mapping/GEM_taxa.csv")
View(gem_otus)
View(m)
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
# # 19 of 44 matches
mbSet<-readMNetTable(mbSet, "~/NetBeansProjects/MicrobiomeNet/MicrobiomeNet/src/main/webapp/resources/data/s0_crc_example.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CRC vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
View(m)
gem_otus <- data.table::fread("~/Desktop/MicrobiomeNet/MicrobiomeNet_libs/taxa_mapping/GEM_taxa.csv")
View(gem_otus)
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
# # 19 of 44 matches
mbSet<-readMNetTable(mbSet, "~/NetBeansProjects/MicrobiomeNet/MicrobiomeNet/src/main/webapp/resources/data/s0_crc_example.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CRC vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "binomial")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
# just pathway enrichment
mbSet <- PlotEnrichDotPlot(mbSet, "dot_plot")
mbSet <- PlotORA(mbSet, "bar_plot")
#crc
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "msea_ora_result_realres_kegg_pathways.csv",
anot = T, mum = F, lib.type = "kegg")
# just visual exploration
mbSet <- global_visualization(mbSet, "pca", "scz_")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "bioactive", order.by = "group")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "amino", order.by = "group")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "bioactive")
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "bioactive")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "amino")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "Lysine degradation")
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "binomial")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
# just pathway enrichment
mbSet <- PlotEnrichDotPlot(mbSet, "dot_plot")
mbSet <- PlotORA(mbSet, "bar_plot")
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "mummichog_pathway_enrichment_cd.csv",
anot = T, mum = T, lib.type = "kegg")
library(readr)
mummichog_pathway_enrichment_cd <- read_csv("mummichog_pathway_enrichment_cd.csv")
View(mummichog_pathway_enrichment_cd)
# just visual exploration
mbSet <- global_visualization(mbSet, imgName = "franzosa_cd")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "amino", order.by = "group")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "bioactive", order.by = "group")
mbSet <- microbe_metabolite_bubble_chart(mbSet,  metType = "bioactive", height = 25, bubble_size = 2.5)
mbSet <- microbe_metabolite_bubble_chart(mbSet,  metType = "amino", height = 25, bubble_size = 2.5)
mbSet <- microbe_metabolite_bubble_chart(mbSet,  metType = "Primary bile acid biosynthesis", height = 25, bubble_size = 2.5)
mbSet <- microbe_metabolite_bubble_chart(mbSet,  metType = "Steroid biosynthesis", height = 25, bubble_size = 2.5)
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "~/NetBeansProjects/MicrobiomeNet/MicrobiomeNet/src/main/webapp/resources/data/scz_example.csv", "silva");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "SCZ vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "binomial")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
# just pathway enrichment
mbSet <- PlotEnrichDotPlot(mbSet, "dot_plot")
mbSet <- PlotORA(mbSet, "bar_plot")
# scz
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "msea_ora_result_fecal_metabolites_kegg_generic.csv",
anot = T, mum = F, lib.type = "kegg")
# just visual exploration
mbSet <- global_visualization(mbSet, "pca", "scz_")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "amino", order.by = "group")
mbSet <- heatmap_bioactive_metabolites(mbSet, metType = "bioactive", order.by = "group")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "amino")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "bioactive")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "Fatty acid degradation")
mbSet <- microbe_metabolite_bubble_chart(mbSet, metType = "Fatty acid elongation")
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "binomial")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd")
mSet<-InitDataObjects("pktable", "stat", FALSE)
library(MetaboAnalystR)
mSet<-InitDataObjects("pktable", "stat", FALSE)
mSet<-Read.TextData(mSet, "~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_HILIC_POS_CD.csv", "colu", "disc");
mSet<-SanityCheckData(mSet)
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet)
mSet<-FilterVariable(mSet, "iqr", "F", 25)
mSet<-PreparePrenormData(mSet)
mSet<-Normalization(mSet, "NULL", "LogNorm", "NULL", ratio=FALSE, ratioNum=20)
mSet<-Ttests.Anal(mSet, F, 0.05, FALSE, TRUE, "fdr", FALSE)
mSet <- Convert2Mummichog(mSet)
mSet<-InitDataObjects("pktable", "stat", FALSE)
mSet<-Read.TextData(mSet, "~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C18_NEG_CD.csv", "colu", "disc");
mSet<-SanityCheckData(mSet)
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet)
mSet<-FilterVariable(mSet, "iqr", "F", 25)
mSet<-PreparePrenormData(mSet)
mSet<-Normalization(mSet, "NULL", "LogNorm", "NULL", ratio=FALSE, ratioNum=20)
mSet<-Ttests.Anal(mSet, F, 0.05, FALSE, TRUE, "fdr", FALSE)
mSet <- Convert2Mummichog(mSet)
mSet<-InitDataObjects("pktable", "stat", FALSE)
mSet<-Read.TextData(mSet, "~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C8_POS_CD.csv", "colu", "disc");
mSet<-SanityCheckData(mSet)
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet)
mSet<-FilterVariable(mSet, "iqr", "F", 25)
mSet<-PreparePrenormData(mSet)
mSet<-Normalization(mSet, "NULL", "LogNorm", "NULL", ratio=FALSE, ratioNum=20)
mSet<-Ttests.Anal(mSet, F, 0.05, FALSE, TRUE, "fdr", FALSE)
mSet <- Convert2Mummichog(mSet)
c18 <- vroom::vroom("mummichog_input_c18_neg.txt")
c18$mode <- "negative"
c8 <- vroom::vroom("mummichog_input_c8_pos.txt")
c8$mode <- "positive"
hilic <- vroom::vroom("mummichog_input_hilic_pos.txt")
hilic$mode <- "positive"
all_data <- rbind(c18, c8, hilic)
data.table::fwrite(all_data, "mummichog_input_cd_all.txt")
mSet<-InitDataObjects("mass_all", "mummichog", FALSE)
mSet<-SetPeakFormat(mSet, "rmp")
mSet<-UpdateInstrumentParameters(mSet, 10.0, "mixed", "no", 0.02);
mSet<-Read.PeakListData(mSet, "mummichog_input_cd_all.txt");
mSet<-SanityCheckMummichogData(mSet)
mSet<-SetPeakEnrichMethod(mSet, "mum", "v2")
mSet<-SetMummichogPval(mSet, 1.0E-5)
mSet<-PerformPSEA(mSet, "kegg_pathways_generic_mum", "current", 3 , 100)
mSet<-PlotPeaks2Paths(mSet, "peaks_to_paths_0_", "png", 72, width=NA)
dat <- vroom::vroom("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C8_POS_CD.csv")
dat_list <- list("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C8_POS_CD.csv",
"~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C18_NEG_CD.csv",
"~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_HILIC_POS_CD.csv")
dat <- vroom::vroom(dat_list)
dat1 <- vroom::vroom("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C8_POS_CD.csv")
dat2 <- vroom::vroom("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_C18_NEG_CD.csv")
dat3 <- vroom::vroom("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/metaboanalyst_input_HILIC_POS_CD.csv")
intersect(colnames(dat1), colnames(dat2))
pca_matrix <- metabolites.table[, -1]
intersect(colnames(dat1), colnames(dat2))
View(dat3)
gsub("IBD1014.*", "", colnames(dat1))
gsub("\\IBD1014..*", "", colnames(dat1))
gsub("*\\IBD1014..*", "", colnames(dat1))
gsub("(IBD1014).*", "", colnames(dat1))
gsub("(IBD1014).*", "\\1", colnames(dat1))
colnames(dat1) <- gsub("(IBD1014).*", "\\1", colnames(dat1))
colnames(dat2) <- gsub("(IBD1014).*", "\\1", colnames(dat2))
colnames(dat3) <- gsub("(IBD1014).*", "\\1", colnames(dat3))
intersect(colnames(dat1), colnames(dat2))
dat1 <- dat1[, intersect(colnames(dat1), colnames(dat2))]
dat2 <- dat2[, intersect(colnames(dat1), colnames(dat2))]
dat3 <- dat3[, intersect(colnames(dat3), colnames(dat2))]
dat_all <- rbind(dat1, dat2, dat3)
View(dat_all)
pca_matrix <- dat_all[-1, -1]
rownames(pca_matrix) <- dat_all[,1]
rownames(pca_matrix) <- dat_all[-1,1]
pca_matrix <- dat_all[-1, -1]
rownames(pca_matrix) <- dat_all[-1,1]
View(pca_matrix)
length()
length(dat_all[-1,1])
dat_all[-1,1]
rownames(pca_matrix) <- unlist(dat_all[-1,1])
dat_all <- dat_all %>% dplyr::distinct(Sample)
library(tidyverse)
dat_all <- dat_all %>% dplyr::distinct(Sample)
dat_all <- rbind(dat1, dat2, dat3)
dat_all <- dat_all %>% dplyr::distinct(Sample, .keep_all = T)
pca_matrix <- dat_all[-1, -1]
rownames(pca_matrix) <- unlist(dat_all[-1,1])
View(pca_matrix)
metabolites_pca <- prcomp(pca_matrix)
dat_all <- dat_all %>% mutate_all(as.numeric)
View(dat_all)
dat_all <- rbind(dat1, dat2, dat3)
dat_all <- dat_all %>% dplyr::distinct(Sample, .keep_all = T)
pca_matrix <- dat_all[-1, -1]
rownames(pca_matrix) <- unlist(dat_all[-1,1])
pca_matrix <- pca_matrix %>% mutate_all(as.numeric)
metabolites_pca <- prcomp(pca_matrix)
pca_matrix <- pca_matrix %>% replace(is.na(.), 0)
metabolites_pca <- prcomp(pca_matrix)
df_out <- as.data.frame(metabolites_pca$x)
df_out$Group <- dat_all$Sample[-1]
df_out$Microbe <- rownames(df_out)
var_importance <- summary(metabolites_pca)$importance[2,]
var_importance <- paste0(names(var_importance), " (", var_importance*100, "%)")
g.title <- c("PCA of CD")
g.title.save <- "cd_pca_untargeted_met.png"
p <- ggplot(df_out, aes(x = PC1, y = PC2, color = Group, label = Microbe)) +
geom_point(size=5) + theme_bw() + scale_color_manual(values=c("HC" = "#387590", "CD" = "#E64242")) +
xlab(var_importance[1]) + ylab(var_importance[2]) + ggtitle(g.title) +
labs(color=group.label) + theme(legend.text=element_text(size=9))
p <- ggplot(df_out, aes(x = PC1, y = PC2, color = Group, label = Microbe)) +
geom_point(size=5) + theme_bw() + scale_color_manual(values=c("HC" = "#387590", "CD" = "#E64242")) +
xlab(var_importance[1]) + ylab(var_importance[2]) + ggtitle(g.title) + theme(legend.text=element_text(size=9))
p
dat_all$Sample[-1]
dat_all$Sample
dat_all[1,-1]
df_out$Group <- unlist(dat_all[1,-1])
unlist(dat_all[1,-1])
View(df_out)
metabolites_pca <- prcomp(t(pca_matrix))
df_out <- as.data.frame(metabolites_pca$x)
df_out$Group <- unlist(dat_all[1,-1])
df_out$Microbe <- rownames(df_out)
var_importance <- summary(metabolites_pca)$importance[2,]
var_importance <- paste0(names(var_importance), " (", var_importance*100, "%)")
library(ggplot2)
library(viridis)
g.title <- c("PCA of CD")
g.title.save <- "cd_pca_untargeted_met.png"
p <- ggplot(df_out, aes(x = PC1, y = PC2, color = Group, label = Microbe)) +
geom_point(size=5) + theme_bw() + scale_color_manual(values=c("HC" = "#387590", "CD" = "#E64242")) +
xlab(var_importance[1]) + ylab(var_importance[2]) + ggtitle(g.title) + theme(legend.text=element_text(size=9))
p
library(plotly)
pp <- ggplotly(p)
p.title.save <- ("cd_pca_untargeted_met.html")
htmlwidgets::saveWidget(pp, p.title.save)
df_out$Microbe == "0090_XAV_IBD1014"
df_out <- df_out[!df_out$Microbe == "0090_XAV_IBD1014", ]
p <- ggplot(df_out, aes(x = PC1, y = PC2, color = Group, label = Microbe)) +
geom_point(size=5) + theme_bw() + scale_color_manual(values=c("HC" = "#387590", "CD" = "#E64242")) +
xlab(var_importance[1]) + ylab(var_importance[2]) + ggtitle(g.title) + theme(legend.text=element_text(size=9))
P
p
ggsave(g.title.save, p, height = 7, width = 8)
library(plotly)
pp <- ggplotly(p)
p.title.save <- ("cd_pca_untargeted_met.html")
htmlwidgets::saveWidget(pp, p.title.save)
mz2cpd <- vroom::vroom("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/mummichog_matched_compound_all.csv")
View(mz2cpd)
View(df_out)
# loading plot
loadings <- metabolites_pca$rotation
loadings <- as.data.frame(loadings[,1:2])
loadings$cpds <- rownames(loadings)
loadings$real_cpds <- mz2cpd$Matched.Compound[match(rownames(loadings), mz2cpd$Query.Mass)]
# loading plot
loadings <- metabolites_pca$rotation
View(loadings)
loadings <- as.data.frame(loadings[,1:2])
View(pca_matrix)
loadings$cpds <- unlist(dat_all[-1,1])
loadings$cpds <- as.numeric(unlist(dat_all[-1,1]))
loadings$real_cpds <- mz2cpd$Matched.Compound[match(rownames(loadings), mz2cpd$Query.Mass)]
loadings$real_cpds <- mz2cpd$Matched.Compound[match(loadings$cpds, mz2cpd$Query.Mass)]
View(loadings)
all_kegg_compounds_mar2021 <- readRDS("~/Desktop/MicrobiomeNet/pathways/KEGG/all_kegg_compounds_mar2021.rds")
View(all_kegg_compounds_mar2021)
loadings$real_cpds_names <- ifelse(!is.na(loadings$real_cpds), all_kegg_compounds_mar2021[match(loadings$real_cpds, all_kegg_compounds_mar2021[,1]),2], NA)
View(loadings)
library(ggplot2)
library(viridis)
g.title <- c("PCA Loadings of AGORA Metabolic Content")
g.title.save <- paste0("pca_loading_", "agora", ".png")
p <- ggplot(loadings, aes(x = PC1, y = PC2, label = cpds)) +
geom_point(size=2.5) + theme_bw() +
xlab("PC1") + ylab("PC2") + ggtitle(g.title) +
theme(legend.text=element_text(size=9))
ggsave(g.title.save, p, height = 7, width = 8)
library(plotly)
pp <- ggplotly(p)
p.title.save <- paste0("pca_loading_", "agora", ".html")
htmlwidgets::saveWidget(pp, p.title.save)
p <- ggplot(loadings, aes(x = PC1, y = PC2, label = cpds, label2 = real_cpds_names)) +
geom_point(size=2.5) + theme_bw() +
xlab("PC1") + ylab("PC2") + ggtitle(g.title) +
theme(legend.text=element_text(size=9))
ggsave(g.title.save, p, height = 7, width = 8)
library(plotly)
pp <- ggplotly(p)
p.title.save <- paste0("pca_loading_", "agora", ".html")
htmlwidgets::saveWidget(pp, p.title.save)
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "tt")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "mummichog_pathway_enrichment.csv",
anot = T, mum = T, lib.type = "kegg")
mbSet <- GetDEMetabolites(mbSet, "proportions")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- GetDEMetabolites(mbSet, "tt")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "mummichog_pathway_enrichment.csv",
anot = T, mum = T, lib.type = "kegg")
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd")
md <- vroom::vroom("cd_control_metadata.csv")
View(md)
c8 <- vroom::vroom("metaboanalyst_input_C8_POS_CD.csv")
View(c8)
full_ibd_data <- read.csv("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/Microbiome_Data_IBD_Franzosa_2019.csv", check.names = F)
full_ibd_meta <- read.csv("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/Microbiome_MetaData_IBD_Franzosa.csv", check.names = F)
View(full_ibd_meta)
micro <- vroom::vroom("cd_control_data.csv")
View(micro)
full_ibd_data <- read.csv("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/Microbiome_Data_IBD_Franzosa_2019.csv", check.names = F)
full_ibd_meta <- read.csv("~/Desktop/MicrobiomeNet/MicrobiomeNet/franzosa_ibd/Microbiome_MetaData_IBD_Franzosa.csv", check.names = F)
library(tidyverse)
cd_control <- full_ibd_meta %>% filter(Diagnosis == c("CD", "Control"))
uc_control <- full_ibd_meta %>% filter(Diagnosis == c("UC", "Control"))
cd_control_data <- full_ibd_data[, colnames(full_ibd_data) %in% cd_control$`#NAME`]
cd_control_data <- cbind(full_ibd_data[,1], cd_control_data)
micro.inx <- grep("PRISM", colnames(micro))
micro <- micro[c(1, micro.inx), ]
View(micro)
meta <- vroom::vroom("cd_control_metadata.csv")
View(meta)
meta.inx <- grep("PRISM", meta$`#NAME`)
meta <- meta[meta.inx, ]
vroom::vroom_write(meta, "cd_control_metadata_prism.csv")
vroom::vroom_write(micro, "cd_control_data_prism.csv")
lefse_cd <- vroom::vroom("~/Downloads/lefse_de_output_prism.csv")
View(lefse_cd)
lefse_cd <- vroom::vroom("~/Downloads/lefse_de_output_prism.csv", col_names = F)
lefse_cd <- vroom::vroom("~/Downloads/lefse_de_output.csv")
lefse_cd <- vroom::vroom("~/Downloads/lefse_de_output.csv")
# CD vs. Control
lefse_cd$Group <- ifelse(lefse_cd$LDAscore > 0, "Down", "Up")
lefse_cd <- lefse_cd[lefse_cd$FDR < 0.05, ]
input <- lefse_cd[, c(1, 7)]
input[,1] <- sapply(input[,1], function(x)  gsub("_", " ", x))
write.csv(input, "franzosa_cd_control_prism.csv", row.names = F)
setwd("~/Desktop/MicrobiomeNet/MicrobiomeNet")
devtools::load_all()
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control_prism.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control_prism.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet$mNet$feat.tbl
mbSet <- Init.mbSetObj()
mbSet <- SetModuleType(mbSet, "mnet")
mbSet<-readMNetTable(mbSet, "franzosa_ibd/franzosa_cd_control_prism.csv", "species");
mbSet<-PerformMicrobiomeNetSanity(mbSet, "CD vs. Healthy");
lib.vec <- c("both")
mbSet <- setGemLibrary(mbSet, lib.vec);
mbSet <- match2gems(mbSet)
m <- qs::qread("gem_matches.qs")
mbSet$mNet$feat.tbl$Microbe[!mbSet$mNet$feat.tbl$Microbe %in% m$query]
nrow(m[m$db == "agora", ])
nrow(m[m$db == "carveme", ])
mbSet <- GetMetabolitesFromGems(mbSet)
mbSet <- GetDEMetabolites(mbSet, "tt")
mbSet <- GetPermDEMetabolites(mbSet)
mbSet <- PerformPermEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- PerformTrueEnrichment(mbSet, library.name = "kegg_pathways_generic")
mbSet <- lollipop_chart_real_res(mbSet, "KEGG", "kegg", "mummichog_pathway_enrichment.csv",
anot = T, mum = T, lib.type = "kegg")
use_gpl3_license()
library(devtools)
use_gpl3_license()
use_vignette("mTaxSi-101", "mTaxSi 101")
devtools::document()
